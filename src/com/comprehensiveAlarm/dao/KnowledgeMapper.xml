<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.comprehensiveAlarm.dao.KnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.comprehensiveAlarm.po.Knowledge" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="scene_id" property="scene_id" jdbcType="VARCHAR" />
    <result column="alarm_codes" property="alarm_codes" jdbcType="VARCHAR" />
    <result column="origin_flag" property="origin_flag" jdbcType="INTEGER" />
    <result column="share_num" property="share_num" jdbcType="INTEGER" />
    <result column="search_num" property="search_num" jdbcType="INTEGER" />
    <result column="feedback_num" property="feedback_num" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, content, scene_id, alarm_codes, origin_flag, share_num, search_num, feedback_num
  </sql>
  
  <!-- //知识展示的下拉框信息List<String> getQueryConditionsForKnowledgeId();-->
    <select id="getQueryConditionsForKnowledgeId" resultType="java.lang.String" >
     select 
    knowledge.id
    from knowledge;
  </select>
   <!-- //知识展示的下拉框信息List<String> getQueryConditionsForKnowledgeSceneIdList();  -->
       <select id="getQueryConditionsForKnowledgeSceneIdList" resultType="java.lang.String">
   select 
    knowledge.scene_id
    from knowledge;
  </select>
    <!-- //知识展示的下拉框信息 List<String> getQueryConditionsForKnowledgealarmAlarmCodeId(); -->
      <select id="getQueryConditionsForKnowledgealarmAlarmCodeId" resultType="java.lang.String"  >
   select 
    knowledge.alarm_codes
    from knowledge;
  </select>
  
  <!--     //根据条件获取知识
    List<KnowledgeQueryResult> getKnowledge(KnowledgeQueryParam param) ; -->
  <select id="getKnowledge" resultType="com.comprehensiveAlarm.jo.KnowledgeQueryResult"  parameterType="com.comprehensiveAlarm.jo.KnowledgeQueryParam">
   select 
    *
    from knowledge
		where knowledge.title like ("%"#{key}"%") and knowledge.content like ("%"#{key}"%")
		and id=#{id} and scene_id =#{scene_id} and alarm_codes like ("%"#{alarm_code_id}"%");
  </select>
  
  
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.comprehensiveAlarm.po.KnowledgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from knowledge
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from knowledge
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.comprehensiveAlarm.po.KnowledgeExample" >
    delete from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.comprehensiveAlarm.po.Knowledge" >
    insert into knowledge (id, title, content, 
      scene_id, alarm_codes, origin_flag, 
      share_num, search_num, feedback_num
      )
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{scene_id,jdbcType=VARCHAR}, #{alarm_codes,jdbcType=VARCHAR}, #{origin_flag,jdbcType=INTEGER}, 
      #{share_num,jdbcType=INTEGER}, #{search_num,jdbcType=INTEGER}, #{feedback_num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.comprehensiveAlarm.po.Knowledge" >
    insert into knowledge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="scene_id != null" >
        scene_id,
      </if>
      <if test="alarm_codes != null" >
        alarm_codes,
      </if>
      <if test="origin_flag != null" >
        origin_flag,
      </if>
      <if test="share_num != null" >
        share_num,
      </if>
      <if test="search_num != null" >
        search_num,
      </if>
      <if test="feedback_num != null" >
        feedback_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="scene_id != null" >
        #{scene_id,jdbcType=VARCHAR},
      </if>
      <if test="alarm_codes != null" >
        #{alarm_codes,jdbcType=VARCHAR},
      </if>
      <if test="origin_flag != null" >
        #{origin_flag,jdbcType=INTEGER},
      </if>
      <if test="share_num != null" >
        #{share_num,jdbcType=INTEGER},
      </if>
      <if test="search_num != null" >
        #{search_num,jdbcType=INTEGER},
      </if>
      <if test="feedback_num != null" >
        #{feedback_num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.comprehensiveAlarm.po.KnowledgeExample" resultType="java.lang.Integer" >
    select count(*) from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update knowledge
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.scene_id != null" >
        scene_id = #{record.scene_id,jdbcType=VARCHAR},
      </if>
      <if test="record.alarm_codes != null" >
        alarm_codes = #{record.alarm_codes,jdbcType=VARCHAR},
      </if>
      <if test="record.origin_flag != null" >
        origin_flag = #{record.origin_flag,jdbcType=INTEGER},
      </if>
      <if test="record.share_num != null" >
        share_num = #{record.share_num,jdbcType=INTEGER},
      </if>
      <if test="record.search_num != null" >
        search_num = #{record.search_num,jdbcType=INTEGER},
      </if>
      <if test="record.feedback_num != null" >
        feedback_num = #{record.feedback_num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update knowledge
    set id = #{record.id,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      scene_id = #{record.scene_id,jdbcType=VARCHAR},
      alarm_codes = #{record.alarm_codes,jdbcType=VARCHAR},
      origin_flag = #{record.origin_flag,jdbcType=INTEGER},
      share_num = #{record.share_num,jdbcType=INTEGER},
      search_num = #{record.search_num,jdbcType=INTEGER},
      feedback_num = #{record.feedback_num,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.comprehensiveAlarm.po.Knowledge" >
    update knowledge
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="scene_id != null" >
        scene_id = #{scene_id,jdbcType=VARCHAR},
      </if>
      <if test="alarm_codes != null" >
        alarm_codes = #{alarm_codes,jdbcType=VARCHAR},
      </if>
      <if test="origin_flag != null" >
        origin_flag = #{origin_flag,jdbcType=INTEGER},
      </if>
      <if test="share_num != null" >
        share_num = #{share_num,jdbcType=INTEGER},
      </if>
      <if test="search_num != null" >
        search_num = #{search_num,jdbcType=INTEGER},
      </if>
      <if test="feedback_num != null" >
        feedback_num = #{feedback_num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.comprehensiveAlarm.po.Knowledge" >
    update knowledge
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      scene_id = #{scene_id,jdbcType=VARCHAR},
      alarm_codes = #{alarm_codes,jdbcType=VARCHAR},
      origin_flag = #{origin_flag,jdbcType=INTEGER},
      share_num = #{share_num,jdbcType=INTEGER},
      search_num = #{search_num,jdbcType=INTEGER},
      feedback_num = #{feedback_num,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>